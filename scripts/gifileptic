prompt_options "disable input" 0 "disable ctrl+c" 0 || return 1

# === VARIABLES === #
SCREEN=$(xrandr | grep " connected" | cut -d" " -f1);
NO_INPUT=${options[0]}
FORCE=${options[1]}


# === FUNCTIONS === #
force_workspace()
{
    i3-msg "workspace 42";
}

show_image()
{
    if ! pgrep -x "firefox" > /dev/null; then
        firefox --new-window "http://htmlpreview.github.io/?https://raw.githubusercontent.com/MarcVillain/Confloose/master/webpages/Lock.html" 2>&1>/dev/null & disown
    fi
}

full_screen_firefox()
{
    i3-msg '[title=".*Mozilla Firefox"] fullscreen enable; [title=".*Mozilla Firefox"] move workspace 42' 2>&1>/dev/null
}

random_gamma()
{
    randR=$(($RANDOM%2))
    randG=$(($RANDOM%2))
    randB=$(($RANDOM%2))

    xrandr --output $SCREEN --gamma $randR:$randG:$randB 2>&1>/dev/null
}

prevent_mouse()
{
    while read -r line; do
        xinput disable $line;
    done < <(xinput | grep Mouse | tr -d " " | tr "\t" " " | cut -d" " -f2 | cut -d"=" -f2)
}

prevent_keyboard()
{
    while read -r line; do
        xinput disable $line;
    done < <(xinput | grep Keyboard | tr -d " " | tr "\t" " " | cut -d" " -f2 | cut -d"=" -f2)
}

# === MAIN === #
main()
{
    if [ $NO_INPUT -eq 1 ]; then
        prevent_mouse;
        prevent_keyboard;
    fi

    pkill -9 firefox

    while true; do
        force_workspace
        show_image
        random_gamma
        full_screen_firefox
        if [ -n ${DEBUG+x} ]; then
            break
        fi
    done
}

# === RUN === #
if [ $FORCE -eq 0 ]; then
    echo "Press ctrl+c to exit."
    main 2>&1>/dev/null
else
    main 2>&1>/dev/null & disown
fi
